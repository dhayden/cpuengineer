name: Build and deploy Docker app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:  # This allows manual triggering of the workflow from GitHub UI.

env:
  IMAGE_NAME: cpuengineer
  REGISTRY: ghcr.io/${{ github.repository_owner }}  # Automatically uses the repo owner's GHCR.

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # Specifies the runner environment.

    steps:
    - uses: actions/checkout@v4  # Checks out your repository under $GITHUB_WORKSPACE.

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  # Sets up Docker Buildx to build multi-architecture images.

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}  # Uses the GitHub username of the person who initiated the workflow.
        password: ${{ secrets.CR_PAT }}  # Authenticates using a Personal Access Token stored as a secret.

    - name: Build and push Docker image using Docker Compose
      run: |
        docker-compose build  # Builds the Docker images using docker-compose.yml.
        docker-compose push  # Pushes the built images to the defined registry.

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensures this job runs after the build-and-push job completes successfully.

    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  # Logs into Azure using credentials stored in GitHub secrets.

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.IMAGE_NAME }}  # Specifies the name of the Azure Web App to deploy to.
        images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest'  # Specifies the image to deploy.
